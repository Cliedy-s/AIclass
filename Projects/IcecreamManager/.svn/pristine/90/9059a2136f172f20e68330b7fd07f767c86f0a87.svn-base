using IceCreamManager.Service;
using IceCreamManager.UserMain;
using IceCreamManager.VO;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;
using static IceCreamManager.UserMain.ProductListUserControl;

namespace IceCreamManager
{
    public partial class UserMain3 : Form
    {

        //string pName = string.Empty;
        //List<ProductVO> list;
        //public UserMain3()
        //{
        //    InitializeComponent();
        //}
        //public string Pro_Size { get; set; }

        //private void PictureBox1_Click(object sender, EventArgs e)
        //{
        //    Application.Restart();
        //}

        //private void PictureBox3_Click(object sender, EventArgs e)
        //{
        //    UserMain2 frm = new UserMain2
        //    {
        //        MdiParent = (UserMain1)this.MdiParent,
        //        WindowState = FormWindowState.Maximized
        //    };
        //    frm.Show();
        //    this.Close();
        //}

        //private void GetAllProductData()
        //{
        //    ProductService service = new ProductService();
        //    list = service.GetAllProductData();
        //}


        //private void MyUserControl1_OrderClick(object sender, UserOrderEventArgs eArgs)
        //{
        //    pName = labMenu.Text;

        //    if (pName == eArgs.ProductName)
        //    {
        //        numericUpDown1.Value += 1;
        //    }
        //    else
        //    {
        //        numericUpDown1.Value = 1;
        //    }
        //    int cnt = Convert.ToInt32(numericUpDown1.Value);

        //    labMenu.Text = eArgs.ProductName;
        //    picIceCream.Image = eArgs.PImage;

        //    if (labSize.Text == "주니어")
        //    {
        //        labPrice.Text = (eArgs.Price * cnt).ToString();
        //    }
        //    else if (labSize.Text == "레귤러")
        //    {
        //        labPrice.Text = (eArgs.Price * 2 * cnt).ToString();
        //    }
        //    else if (labSize.Text == "킹")
        //    {
        //        labPrice.Text = (eArgs.Price * 3 * cnt).ToString();
        //    }
        //    else
        //    {
        //        MessageBox.Show("사이즈를 선택하지 않습니다.", "오류");
        //    }
        //}

        //private void UserMain3_Load(object sender, EventArgs e)
        //{
        //    GetAllProductData();

        //    for (int i = 0; i < list.Count / 4; i++)
        //    {
        //        for (int k = 0; k < 4; k++)
        //        {
        //            ProductListUserControl ctrl = new ProductListUserControl();
        //            ctrl.Name = "btn" + ((i * 3) + k).ToString();
        //            ctrl.Size = new System.Drawing.Size(207, 176);
        //            ctrl.Location = new Point((k * 230) + 30, (i * 200) + 50);

        //            ctrl.PID = list[(i * 3) + k].pro_No.ToString();
        //            ctrl.PName = list[(i * 3) + k].pro_Name;
        //            ctrl.Price = list[(i * 3) + k].pro_Price;
        //            if (list[(i * 3) + k].pro_Img != null)
        //            {
        //                TypeConverter tc = TypeDescriptor.GetConverter(typeof(Bitmap));
        //                ctrl.Picture = (Bitmap)(tc.ConvertFrom(list[(i * 3) + k].pro_Img));
        //            }
        //            ctrl.OrderClick += new UserOrderEvent(this.MyUserControl1_OrderClick);
        //            this.panel1.Controls.Add(ctrl);
        //        }
        //    }

        //    labSize.Text = Pro_Size;

        //    ((UserMain1)this.MdiParent).btnlogout.Visible = true;
        //    ((UserMain1)this.MdiParent).btnOrderDetails.Visible = true;
        //    ((UserMain1)this.MdiParent).label2.Visible = true;
        //    ((UserMain1)this.MdiParent).labName.Visible = true;
        //}

        //private void PictureBox4_Click(object sender, EventArgs e)
        //{
        //    UserMain4 frm = new UserMain4
        //    {
        //        MdiParent = (UserMain1)this.MdiParent,
        //        WindowState = FormWindowState.Maximized
        //    };
        //    frm.Show();
        //    this.Close();
        //}



        //private void NumericUpDown1_ValueChanged(object sender, EventArgs e)
        //{
        //    NumericUpDown num = (NumericUpDown)sender;
        //    if (Convert.ToInt32(num.Text + 1) > num.Value)
        //    {
        //        if (labSize.Text == "주니어")
        //        {
        //            int a = int.Parse(labPrice.Text);
        //            labPrice.Text = (a + 1500).ToString();
        //        }
        //        else if (labSize.Text == "레귤러")
        //        {
        //            int a = int.Parse(labPrice.Text);
        //            labPrice.Text = (a + 3000).ToString();
        //        }
        //        else if (labSize.Text == "킹")
        //        {
        //            int a = int.Parse(labPrice.Text);
        //            labPrice.Text = (a + 4500).ToString();
        //        }
        //        else
        //        {
        //            MessageBox.Show("사이즈 증가 오류.", "오류");
        //        }
        //    }
        //    else if (Convert.ToInt32(num.Text) > num.Value)
        //    {
        //        if (labSize.Text == "주니어")
        //        {
        //            int a = int.Parse(labPrice.Text);
        //            labPrice.Text = (a - 1500).ToString();
        //        }
        //        else if (labSize.Text == "레귤러")
        //        {
        //            int a = int.Parse(labPrice.Text);
        //            labPrice.Text = (a - 3000).ToString();
        //        }
        //        else if (labSize.Text == "킹")
        //        {
        //            int a = int.Parse(labPrice.Text);
        //            labPrice.Text = (a - 4500).ToString();
        //        }
        //        else
        //        {
        //            MessageBox.Show("사이즈 증가 오류.", "오류");
        //        }
        //    }


        //}

        List<OrderDetailVO> orderDetailsList;
        string pName = string.Empty;
        List<ProductVO> list;
        public UserMain3()
        {
            InitializeComponent();
        }
        public string Pro_Size { get; set; }
        int iPro_Size;
        int Pro_Price;
        private void PictureBox3_Click(object sender, EventArgs e)
        {
            UserMain2 frm = new UserMain2
            {
                MdiParent = (UserMain1)this.MdiParent,
                WindowState = FormWindowState.Maximized
            };
            frm.Show();
            this.Close();
        }// 뒤 폼으로 돌아가는 버튼


        private void PictureBox4_Click(object sender, EventArgs e)
        {
            if (labMenu.Text!="" || numericUpDown1.Value != 0 || labPrice.Text != "0")
            {
                if (orderDetailsList == null)
                    orderDetailsList = new List<OrderDetailVO>();

                int index = orderDetailsList.FindIndex(p => p.pro_Name == labMenu.Text && p.pro_Size == iPro_Size);
                if (index >= 0)
                {
                    orderDetailsList[index].cod_Each = orderDetailsList[index].cod_Each + Convert.ToInt32(numericUpDown1.Value);         
                    orderDetailsList[index].cod_Price = (1500*iPro_Size)* orderDetailsList[index].cod_Each;                
                }
                else
                {
                    OrderDetailVO newItem = new OrderDetailVO();
                    newItem.pro_Size = iPro_Size;
                    newItem.pro_Name = labMenu.Text;
                    newItem.cod_Each = Convert.ToInt32(numericUpDown1.Value);
                    newItem.cod_Price = int.Parse(labPrice.Text);

                    orderDetailsList.Add(newItem);
                }

                UserMain4 frm = new UserMain4();
                frm.MdiParent = (UserMain1)this.MdiParent;
                frm.WindowState = FormWindowState.Maximized;
                frm.DetailList = orderDetailsList;
                int sum=0;
                foreach (OrderDetailVO item in orderDetailsList)
                {
                    sum += item.cod_Price;
                }
                frm.Allprice = sum;
                frm.Show();
                //this.Hide();
            }
            else
            {
                MessageBox.Show("아이스크림을 선택해주세요","확인");
            }
        } // 다음 폼으로 가는 버튼
        private void MyUserControl1_OrderClick(object sender, UserOrderEventArgs eArgs)
        {
            pName = labMenu.Text;
            labMenu.Text = eArgs.ProductName;
            picIceCream.Image = eArgs.PImage;
            Pro_Price = eArgs.Price;

            if (pName == eArgs.ProductName)
                numericUpDown1.UpButton();
            else
                numericUpDown1.Value = 1;
        } // 유저컨트롤 클릭 메서드
        private void UserMain3_Load(object sender, EventArgs e)
        {
            GetAllProductData(); // 모든 제품을 가져옴

            // 동적버튼 생성 for
            for (int i = 0; i < list.Count / 4; i++)
            {
                for (int k = 0; k < 4; k++)
                {
                    ProductListUserControl ctrl = new ProductListUserControl();
                    ctrl.Name = "btn" + ((i * 3) + k).ToString();
                    ctrl.Size = new System.Drawing.Size(207, 176);
                    ctrl.Location = new Point((k * 230) + 30, (i * 200) + 50);

                    ctrl.PID = list[(i * 3) + k].pro_No.ToString();
                    ctrl.PName = list[(i * 3) + k].pro_Name;
                    ctrl.Price = list[(i * 3) + k].pro_Price;
                    if (list[(i * 3) + k].pro_Img != null)
                    {
                        TypeConverter tc = TypeDescriptor.GetConverter(typeof(Bitmap));
                        ctrl.Picture = (Bitmap)(tc.ConvertFrom(list[(i * 3) + k].pro_Img));
                    }
                    ctrl.OrderClick += new UserOrderEvent(this.MyUserControl1_OrderClick);
                    this.panel1.Controls.Add(ctrl);
                }
            
            } // int타입에 설정해준다.
            // ????????????????
            ((UserMain1)this.MdiParent).btnlogout.Visible = true;
            ((UserMain1)this.MdiParent).btnOrderDetails.Visible = true;
            ((UserMain1)this.MdiParent).label2.Visible = true;
            ((UserMain1)this.MdiParent).labName.Visible = true;
        } //로드
        private void GetAllProductData()
        {
            ProductService service = new ProductService();
            list = service.GetAllProductData();
        } // 모든 제품을 가져오는 메서드
        private void NumericUpDown1_ValueChanged(object sender, EventArgs e)
        {
               labPrice.Text = (numericUpDown1.Value * (iPro_Size * Pro_Price)).ToString();  
        } // 벨류 체인지

        private void UserMain3_Activated(object sender, EventArgs e)
        {
            labMenu.Text = "";
            numericUpDown1.Value = 0;
            labPrice.Text = "0";
            labSize.Text = Pro_Size; // 이전 폼의 사이즈 
            switch (Pro_Size)
            {
                case "주니어":
                    iPro_Size = 1;
                    break;
                case "레귤러":
                    iPro_Size = 2;
                    break;
                case "킹":
                    iPro_Size = 3;
                    break;
                default:
                    throw new Exception("사이즈를 설정해주세요.");
            }
        }
    }
}
