using System;
using System.Windows.Forms;
using IceCreamManager.VO;
using IceCreamManager.Service;
using System.Collections.Generic;
using System.Threading;

namespace IceCreamManager
{
    public partial class OffererOder_Form : Form
    {
        List<OrderVO> Orderlist;
        List<OrderVO> Filterlist1 = new List<OrderVO>(); //입고되지않은 자제들만
        List<OrderVO> Filterlist2 = new List<OrderVO>(); //입고된 자제들
        OrderService service = new OrderService();
        System.Windows.Forms.Timer timer = new System.Windows.Forms.Timer();

        private bool cFlag = false;

        public OffererOder_Form()
        {
            InitializeComponent();
        }

        public OffererOder_Form(bool cFlag) : this()
        {
            this.cFlag = cFlag;
        }

        private void OffererOder_Form_Load(object sender, EventArgs e)
        {       
            DatagridviewDesigns.SetDesign(dgvOrder);
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvOrder, "발주번호", "ofo_No", true, 100); //발주코드      
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvOrder, "발주개수", "ofo_Each", true, 100); //발주개수      
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvOrder, "자재번호", "mat_No", true, 100); //자재번호
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvOrder, "제조사번호", "off_No", true, 100); //제조사번호        
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvOrder, "총금액", "ofo_Price", true, 100); //총금액         
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvOrder, "발주날짜", "ofo_Date", true, 100); //발주날짜
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvOrder, "주문 상태번호", "cmt_No", true, 100); //주문상태번호
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvOrder, "주문 상태", "cmt_Type", true, 100); //주문상태번호

            DataGridViewButtonColumn btn = new DataGridViewButtonColumn();
            btn.HeaderText = "발주관리";
            btn.Text = "확인";
            btn.Name = "btn";
            btn.Width = 100;
            btn.UseColumnTextForButtonValue = true;
            dgvOrder.Columns.Add(btn);

            DatagridviewDesigns.SetDesign(dgvCompletion);
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvCompletion, "발주번호", "ofo_No", true, 100); //발주코드      
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvCompletion, "발주개수", "ofo_Each", true, 100); //발주개수      
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvCompletion, "자재번호", "mat_No", true, 100); //자재번호
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvCompletion, "제조사번호", "off_No", true, 100); //제조사번호        
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvCompletion, "총금액", "ofo_Price", true, 100); //총금액         
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvCompletion, "발주날짜", "ofo_Date", true, 100); //발주날짜
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvCompletion, "주문 상태번호", "cmt_No", true, 100); //주문상태번호
            DatagridviewDesigns.AddNewColumnToDataGridView(dgvCompletion, "주문 상태", "cmt_Type", true, 100); //주문상태번호
            DataLoad();
            
            DataLoad();
            Mtimer();

            
        }
        private void Mtimer()
        {
            timer.Interval = 4000; // 4초
            timer.Tick += new EventHandler(timer_Tick);
            timer.Start();
        }


        private void DataLoad()
        {
            (Orderlist, _) = service.SelectAll();

            Filterlist1 = new List<OrderVO>(); //입고가되지않은 제품들만
            Filterlist1 = Orderlist.FindAll(item => item.cmt_No != 4);
            dgvOrder.DataSource = Filterlist1;

            Filterlist2 = new List<OrderVO>(); //입고가되지않은 제품들만
            Filterlist2 = Orderlist.FindAll(item => item.cmt_No == 4);
            Filterlist2.Sort(delegate(OrderVO a,OrderVO b){

                if (a.ofo_No < b.ofo_No)
                    return 1;
                else if (a.ofo_No > b.ofo_No)
                    return -1;
                return 0;
            });
            dgvCompletion.DataSource = Filterlist2;
        }

        /// <summary>
        /// 발주버튼
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnOrder_Click(object sender, EventArgs e)
        {
            OffererOderDialogue frm = new OffererOderDialogue();
            if (frm.ShowDialog() == DialogResult.OK)
            {
                DataLoad();
                Mtimer();

            }
        }

        private void dgvOrder_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

            if (e.ColumnIndex == dgvOrder.Columns["btn"].Index)
            {
                if (Convert.ToInt32(dgvOrder.SelectedRows[0].Cells[6].Value) == 3)//만약 발주상태가 배송완료라면
                {
                    int count = 0;
                    foreach (var item in Filterlist1)
                    {
                        count++;
                        if (item.ofo_No == Convert.ToInt32(dgvOrder.SelectedRows[0].Cells[0].Value))
                        {
                            Filterlist1.Remove(item);
                            item.cmt_No = 4;
                            item.cmt_Type = "배송완료";
                            Filterlist2.Add(item);
                            service.Update(item.ofo_No, 4);
                            service.MaterialEachUpdate(item.mat_No,item.ofo_Each);//입고된 자제 갯수 업데이트

                            break;
                        }
                    }
       
                    dgvOrder.DataSource = null; //datasource를 비워준다 이때    dgvOrder.Refresh()는 사용하면 안된다.
                    dgvOrder.DataSource = Filterlist1; //다시 데이터를 넣어준다.

                    dgvCompletion.DataSource = null;
                    Filterlist2.Sort(delegate (OrderVO a, OrderVO b) {

                        if (a.ofo_No < b.ofo_No)
                            return 1;
                        else if (a.ofo_No > b.ofo_No)
                            return -1;
                        return 0;
                    });
                    dgvCompletion.DataSource = Filterlist2;
                   
                    //****************
                    // 제품 수량 증가시켜야됨.          

                    MessageBox.Show("자재창고에 입고되었습니다."); //거래처명세서를 볼수 있다!

                    foreach (Form childForm in Application.OpenForms)
                    {
                        if (childForm.GetType() == typeof(Offerer_Form))   //리플렉션
                        {
                            ((Offerer_Form)childForm).DataLoad();
                            childForm.Activate();
                            return;
                        }
                    }

                    Offerer_Form frm = new Offerer_Form();
                    frm.DataLoad();
                    frm.Show();
                }
                else
                {
                    MessageBox.Show("자재가 배송되지 않았습니다.");
                }

            }

        }

        private void btnOrdertxt_Click(object sender, EventArgs e)
        {

            Orderdocument_Form frm = new Orderdocument_Form();
            frm.ShowDialog();
        }

        private void timer_Tick(object sender, EventArgs e)
        {

            int a = Filterlist1.FindAll(item => item.cmt_No == 1).Count;
            a = a + Filterlist1.FindAll(item => item.cmt_No == 2).Count;

            if (a < 1) //배송중과 발주중인 자제가 없다면
            {
                timer.Stop();
                
            }
            else
            {

                int count = 0;
                foreach (var item in Filterlist1)
                {
                    count++;

                    if (item.cmt_No == 1) //시간에 따라서 배송중 배송완료로 변경
                    {
                        service.Update(item.ofo_No, 2);
                       
                    }
                    else if (item.cmt_No == 2)
                    {
                        service.Update(item.ofo_No, 3);
                      
                    }
                }

                DataLoad();

                dgvOrder.DataSource = null; //datasource를 비워준다 이때    dgvOrder.Refresh()는 사용하면 안된다.
                dgvOrder.DataSource = Filterlist1; //다시 데이터를 넣어준다.  

            }


        }

        private void OffererOder_Form_Shown(object sender, EventArgs e)
        {
            if (cFlag)
            {
                btnOrder_Click(null, null);
            }
        }
    }
}
