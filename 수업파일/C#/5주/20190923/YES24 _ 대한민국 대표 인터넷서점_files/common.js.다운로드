
// ****************************************************************************************************
//  기능   : layered 팝업을 위한 변수 선언
// ****************************************************************************************************
var yesLayerPopId = "";
var yesLayerPopObjId = "";
var yesLayerClientW = "";

// ****************************************************************************************************
//  함수명 : fnRePosYesLayer
//  기능   : window resize event 발생시 tooltop resize해주는 함수
// ****************************************************************************************************
function fnRePosYesLayer()
{
    if (yesLayerPopId != "")
    {
        fnShowYesLayerPop(yesLayerPopId, yesLayerPopObjId)
    }
}

// ****************************************************************************************************
//  함수명 : fnOffsetPosY
//  기능   : 툴팁의 Y좌표값을 리턴
// ****************************************************************************************************
function fnOffsetPosY(obj)
{
    var currentY = 0;
    if (obj.offsetParent)
    {
        currentY = obj.offsetTop;
        while (obj = obj.offsetParent)
        {
            currentY += obj.offsetTop;
        }
    }
    return currentY;
}

// ****************************************************************************************************
//  함수명 : fnOffsetPosX
//  기능   : 툴팁의 X좌표값을 리턴
// ****************************************************************************************************
function fnOffsetPosX(obj)
{
    var currentX = 0;
    var objW = Math.round(obj.offsetWidth / 2);
    if (obj.offsetParent)
    {
        currentX = obj.offsetLeft;

        while (obj = obj.offsetParent)
        {
            currentX += obj.offsetLeft;
        }
    }
    currentX = currentX + objW - 3;
    return currentX;
}

// ****************************************************************************************************
//  함수명 : fnShowYesLayerPop
//  기능   : 툴팁 오류  수정된 layered popup
// ****************************************************************************************************
function fnShowYesLayerPop(popupid, obj, offsetW, offsetH)
{
	if(offsetW == undefined) {
		offsetW = 0;
	}

	if(offsetH == undefined) {
		offsetH = 0;
	}

    if (yesLayerPopId != "")
    {
        fnPopupLayerHide(yesLayerPopId);
    }

    yesLayerPopId = popupid;
    yesLayerPopObjId = obj;
    yesLayerClientW = $(document).width();
    var posT = fnOffsetPosY(obj);
    var posX = fnOffsetPosX(obj);
    var popW = $("#" + popupid).width();
    var topPosition = posT + 25;
    var lftPosition = ((posX - (popW / 2)) | 0);
    var limitMaxX = ((960 + ((yesLayerClientW - 980) / 2)) | 0);
    var limitMinX = (((yesLayerClientW - 960) / 2) | 0);
    var posMove;

    if (lftPosition + popW >= limitMaxX)
    {
        posMove = ((lftPosition + popW) - limitMaxX);
        lftPosition -= posMove;
        $("#" + popupid).find('.cock').each(function (i)
        {
            $(this).css("margin-left", +posMove)
        });
    } else if (lftPosition < limitMinX)
    {
        posMove = limitMinX - lftPosition;
        lftPosition += posMove;
        $("#" + popupid).find('.cock').each(function (i)
        {
            $(this).css("margin-left", -posMove)
        });
    } else
    {
        $("#" + popupid).find('.cock').each(function (i)
        {
            $(this).css("margin-left", "0")
        });
    }

	topPosition += offsetH;
	lftPosition += offsetW;

    $("#" + popupid).css({
        "display": "",
        "position": "absolute",
        "left": lftPosition,
        "top": topPosition,
        "z-index": "1000000"
    });
}

function fnShowYesLayerPopFrm(frm, obj, w, h, offsetW, offsetH, scrollOption) {
	if(offsetW == undefined) {
		offsetW = 0;
	}

	if(offsetH == undefined) {
		offsetH = 0;
	}

	if(scrollOption == undefined) {
		scrollOption = false;
	}

    yesDiv = "";
    yesDiv += '<div id="divYesPopIFrm" style="position:absolute;">';
    yesDiv += '<div style="position:relative;background-color:#FFF;">';
    yesDiv += '<div class="cockFrm" style="position:absolute;left:50%;top:-4px;width:8px;height:6px;font-size:1px;line-height:1px;background:url(https://secimage.yes24.com/sysimage/orderN/icon.gif) center -670px no-repeat;"></div>';
    yesDiv += '<iframe id="ifrmYesLayerPop" style="border:solid 2px #3a96d7;" frameborder="0" marginwidth="0" marginheight="0" scrolling="';
    if (scrollOption) {
        yesDiv += 'auto';
    } else {
        yesDiv += '';
    }
    yesDiv += '"></iframe>';
    yesDiv += '</div></div>';

    if (yesLayerPopId != "") {
        fnPopupLayerHide(yesLayerPopId);
    }

    if ($("#divYesPopIFrm").length == 0) {
        $('body').append(yesDiv);
    }

    yesLayerPopId = "divYesPopIFrm";
    yesLayerPopObjId = obj;

    yesLayerClientW = $(document).width();

    var posT = fnOffsetPosY(obj);
    var posX = fnOffsetPosX(obj);
    var popW = w;
    var topPosition = posT + 25;
    var lftPosition = posX - (popW / 2);
    var limitMaxX = (960 + ((yesLayerClientW - 980) / 2));
    var limitMinX = (yesLayerClientW - 960) / 2;
    var posMove;

    if (lftPosition + popW >= limitMaxX) {
        posMove = ((lftPosition + popW) - limitMaxX);
        lftPosition -= posMove;
        $("#divYesPopIFrm").find('.cockFrm').each(function (i) {
            $(this).css("margin-left", +posMove)
        });
    } else if (lftPosition < limitMinX) {
        posMove = limitMinX - lftPosition;
        lftPosition += posMove;
        $("#divYesPopIFrm").find('.cockFrm').each(function (i) {
            $(this).css("margin-left", -posMove)
        });
    } else {
        $("#divYesPopIFrm").find('.cockFrm').each(function (i) {
            $(this).css("margin-left", "0")
        });
    }

	topPosition += offsetH;
	lftPosition += offsetW;

    $("#divYesPopIFrm").css({
        "display": "",
        "position": "absolute",
        "left": lftPosition,
        "top": topPosition,
        "z-index": "1000000",
        "width": w,
        "height": h
    });

    $("#ifrmYesLayerPop").attr("src", frm);

    $("#ifrmYesLayerPop").css({
        "width": "100%",
        "height": h
    });
}

function fnShowYesLayerPopLoad(tp, tar, obj, w , offsetW, offsetH)
{
	if (offsetW == undefined)
    {
        offsetW = 0;
    }
    
    if (offsetH == undefined)
    {
        offsetH = 0;
    }
    
    if (yesLayerPopId != "")
    {
        fnPopupLayerHide(yesLayerPopId);
    }
        
    yesDiv = "";
	yesDiv += '<div id="divYesPopLoad" style="position:absolute;"><div id="loadHtmlYesLayerPop">d';
	yesDiv += '</div></div>';

	if(yesLayerPopId != "")
	{
		fnPopupLayerHide(yesLayerPopId);
	}

	if($("#divYesPopLoad").length == 0)
	{
		$('body').append(yesDiv);
	}

	yesLayerPopId = "divYesPopLoad";
	yesLayerPopObjId = obj;

	yesLayerClientW = $(document).width();

	var posT = fnOffsetPosY(obj);
	var posX = fnOffsetPosX(obj);
	var popW = w;
	var topPosition = posT + 25;
	var lftPosition = ((posX - (popW / 2)) | 0);
	var limitMaxX = (((960 + ((yesLayerClientW - 980)/2))) | 0);
	var limitMinX = (((yesLayerClientW - 960)/2) | 0);
	var posMove;

	switch(tp)
	{
		case "get":
			$("#loadHtmlYesLayerPop").load(tar, function(){
				if(lftPosition + popW >= limitMaxX)
				{
					posMove = ((lftPosition + popW) - limitMaxX);
					lftPosition -= posMove;
					$("#divYesPopLoad").find('.cock').each(function(i){
						$(this).css("margin-left",+posMove)
					});
				}else if(lftPosition < limitMinX){
					posMove = limitMinX - lftPosition;
					lftPosition += posMove;
					$("#divYesPopLoad").find('.cock').each(function(i){
						$(this).css("margin-left",-posMove)
					});
				}else{
					$("#divYesPopLoad").find('.cock').each(function(i){
						$(this).css("margin-left","0")
					});
				}

                topPosition += offsetH;
                lftPosition += offsetW;

				$("#divYesPopLoad").css({
					"display": "",
					"position": "absolute",
					"left": lftPosition,
					"top": topPosition,
					"z-index":"1000000",
					"width":w
				});
			});
		break;
	}
}


// ****************************************************************************************************
//  함수명 : fnLoadChkThumb
//  기능   : 이미지 로드시 썸네일 이미지 출력하기 위한 함수(카트와 사은품선택화면 적용)
// ****************************************************************************************************

function fnLoadChkThumb(obj)
{
    var objW = Math.floor(obj.width);
    var objH = Math.floor(obj.height);
    if (objW > 140)
    {
        var tarH = Math.floor(14000 / objW)
        obj.height = tarH;
        obj.width = 140;
    }
}


// ****************************************************************************************************
//  함수명 : fnIsNaturalNumber
//  기능   : 값의 자연수 여부를 확인 한다.
// ****************************************************************************************************
function fnIsNaturalNumber(number)
{
    for (var i = 0; i < number.length; i++)
    {
        if (number.charCodeAt(i) < 48 || number.charCodeAt(i) > 57)
        {
            return false;
        }
    }

    return true;
}

// ****************************************************************************************************
//  함수명 : fnCheckedChangeChild
//  기능   : Header CheckBox의 상태 값 변화에 따라 하위 모든 CheckBox의 상태 값을 바꾼다
// ****************************************************************************************************
function fnCheckedChangeChild(checkBoxName, checkBoxHeaderId)
{
    var checked = false;
    if ($("#" + checkBoxHeaderId).attr("checked") == "checked")
    {
        checked = true;
    }
    $('input:checkbox[name="' + checkBoxName + '"]').each(
        function (index)
        {
            if ($(this).attr("disabled") != "disabled")
            {
                $(this).attr("checked", checked);
            }
        }
    );
}

// ****************************************************************************************************
//  함수명 : fnCheckedChangeHeader
//  기능   : 하위 CheckBox의 상태 값 변화에 따라 Header CheckBox의 상태 값을 바꾼다
// ****************************************************************************************************
function fnCheckedChangeHeader(checkBoxName, checkBoxHeaderId)
{
    var $ckeckboxes = $('input:checkbox[name="' + checkBoxName + '"]');
    var checked = false;
    if ($ckeckboxes.length == $ckeckboxes.filter(':checked').length)
    {
        checked = true;
    }
    $("#" + checkBoxHeaderId).attr("checked", checked);
}

// ****************************************************************************************************
//  함수명 : fnAjaxLoaderLayerShow
//  기능   : AJAX Loding Image 보이기
// ****************************************************************************************************
function fnAjaxLoaderLayerShow(divAjaxLoaderId, isCenterPosition, mouse, myEvent, isMain)
{
    if (myEvent == undefined)
    {
        myEvent = window.event;
    }

    $("#" + divAjaxLoaderId).css("display", "");
    try
    {
        if (isMain == undefined)
        {
            $("#" + divAjaxLoaderId).html("<img src='/Resource/Images/ajax-loader.gif' align='center' alt='' />");
            $("#" + divAjaxLoaderId).css("position", "absolute");
        }
        else
        {
            $("#" + divAjaxLoaderId).html("<img src='http://image.yes24.com/sysimage/orderN/pay_loading.gif' alt='' />");
            $("#" + divAjaxLoaderId).css("position", "relative");
            $("#" + divAjaxLoaderId).css("left", 0);
        }

        $("#" + divAjaxLoaderId).css("z-index", "100000");
        if (isMain == undefined)
        {
            $("#" + divAjaxLoaderId).css("left", document.body.clientWidth / 2);
            if (isCenterPosition == true)
            {
                $("#" + divAjaxLoaderId).css("top", document.body.clientHeight / 2);
            }
            else
            {
                $("#" + divAjaxLoaderId).css("top", parseInt(document.body.scrollTop) + parseInt(myEvent.clientY) + 10);
            }
            if (mouse == true)
            {
                $("#" + divAjaxLoaderId).css("top", parseInt(document.body.scrollTop) + myEvent.y);
                $("#" + divAjaxLoaderId).css("left", parseInt(document.body.scrollLeft) + myEvent.x);
                var pos = abspos(myEvent);
                $("#" + divAjaxLoaderId).css("left", pos.x + "px");
                $("#" + divAjaxLoaderId).css("top", (pos.y + 10) + "px");
            }
        }
    }
    catch (ex)
    { }
}


function abspos(e)
{
    this.x = e.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);
    this.y = e.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);
    return this;
}
// ****************************************************************************************************
//  함수명 : fnAjaxLoaderLayerHide
//  기능   : AJAX Loding Image 숨기기
// ****************************************************************************************************
function fnAjaxLoaderLayerHide(divAjaxLoaderId)
{
    $("#" + divAjaxLoaderId).empty();
    $("#" + divAjaxLoaderId).css("display", "none");
}

// ****************************************************************************************************
//  함수명 : fnPopupLayerShow
//  기능   : Popup 성격의 Layer 보이기
// ****************************************************************************************************
function fnPopupLayerShow(layerName, isCenterPositionX, myEvent)
{
    if (myEvent == undefined)
    {
        myEvent = window.event;
    }

    $("#" + layerName).css("display", "");
    var width = $("#" + layerName).css("width").replace("px", "");
    var height = $("#" + layerName).css("height").replace("px", "");

    if (isCenterPositionX == true)
    {
        $("#" + layerName).css("left", ((document.body.clientWidth / 2) - (parseInt(width) / 2)) + 'px');
        $("#" + layerName).css("top", (parseInt($(window).scrollTop()) + parseInt(myEvent.clientY)) + 'px');
    }
    else
    {
        $("#" + layerName).css("left", ((parseInt(myEvent.clientX) - (parseInt(width) / 2)) | 0) + 'px');
        $("#" + layerName).css("top", ((parseInt($(window).scrollTop()) + parseInt(myEvent.clientY) + 10) | 0) + 'px');

        if (layerName == "divGiftPackInfo")
        {
            $("#" + layerName).css("left", ((parseInt(myEvent.clientX) - (parseInt(width) / 2) - 230) | 0) + 'px');
        }
    }
}

// ****************************************************************************************************
//  함수명 : fnPopupLayerShowPosition
//  기능   : Popup 성격의 Layer 보이기 - 위치 지정
// ****************************************************************************************************
function fnPopupLayerShowPosition(layerName, left, top, myEvent)
{
    if (myEvent == undefined)
    {
        myEvent = window.event;
    }

    $("#" + layerName).css("display", "");
    var width = $("#" + layerName).css("width").replace("px", "");
    var height = $("#" + layerName).css("height").replace("px", "");
    $("#" + layerName).css("left", parseInt(myEvent.clientX) - (parseInt(width) / 2) + parseInt(left));
    $("#" + layerName).css("top", parseInt(document.body.scrollTop) + parseInt(myEvent.clientY) + parseInt(top));
}

// ****************************************************************************************************
//  함수명 : fnPopupLayerShowFixedPosition
//  기능   : Popup 성격의 Layer 보이기 - 위치 불변 지정  / milestoneName 기준이되는 id
// ****************************************************************************************************
function fnPopupLayerShowFixedPosition(milestoneName, layerName)
{
    var mHeight = parseInt($("#" + milestoneName).css("height").replace("px", ""));
    var mWidth = parseInt($("#" + milestoneName).css("width").replace("px", ""));

    var top = $("#" + milestoneName).offset().top + mHeight + 5;
    var left = $("#" + milestoneName).offset().left + ((mWidth / 2) | 0);

    $("#" + layerName).css("position", "absolute");
    $("#" + layerName).css("display", "");

    var width = parseInt($("#" + layerName).css("width").replace("px", "")) / 2;
    $("#" + layerName).offset({ top: top, left: left - width });
}

// ****************************************************************************************************
//  함수명 : fnPopupLayerHide
//  기능   : Popup 성격의 Layer 숨기기
// ****************************************************************************************************
function fnPopupLayerHide(layerName)
{
    $("#" + layerName).css("display", "none");
}

// ****************************************************************************************************
//  함수명 : fnWindowOpen
//  기능   : Popup 성격의 Layer 보이기
// ****************************************************************************************************
function fnWindowOpen(url, popupName, width, height, isCenterPosition, left, top)
{
    if (isCenterPosition == true)
    {
        left = (((document.body.clientWidth / 2) - (width / 2)) | 0);
        top = (((document.body.clientHeight / 2) - (height / 2)) | 0);
    }
    var features = "width=" + width +
                    ",height=" + height +
                    ",left=" + left +
                    ",top=" + top +
                    ",toolbar=no,location=no,directories=no,menubar=no,scrollbars=yes,resizable=no,copyhistory=no,status=no";

    return window.open(url, popupName, features);
}

// ****************************************************************************************************
//  함수명 : fnWindowOpenFeatures
//  기능   : Popup 성격의 Layer 보이기
// ****************************************************************************************************
function fnWindowOpenFeatures(url, popupName, width, height, isCenterPosition, left, top, etcFeatures)
{
    if (isCenterPosition == true)
    {
        left = (document.body.clientWidth / 2) - (width / 2);
        top = (document.body.clientHeight / 2) - (height / 2);
    }
    var features = "width=" + width +
                    ",height=" + height +
                    ",left=" + left +
                    ",top=" + top + "," +
                    etcFeatures;
    return window.open(url, popupName, features);
}

// ****************************************************************************************************
//  함수명 : fnReplaceAll
//  기능   : 문자열에서 지정한 문자열을 특정 문자열로 치환
// ****************************************************************************************************
function fnReplaceAll(value, character, replaceCharacter)
{
    if (value == null)
    {
        return value;
    }

    value = value.replace(character, replaceCharacter);

    if (value.indexOf(character) > -1)      // 바꿀 문자가 존재하면 재귀 호출
    {
        return fnReplaceAll(value, character, replaceCharacter);
    }
    else
    {
        return value;
    }
}

// ****************************************************************************************************
//  함수명 : fnNumberFomatTextbox
//  기능   : Input Control에서 1000단위 구분자(,) 제거
// ****************************************************************************************************
function fnNumberFomatTextbox(textBox)
{
    $(textBox).attr("value", fnReplaceAll($(textBox).attr("value"), ",", ""));
    $(textBox).select();
}

// ****************************************************************************************************
//  함수명 : fnNumberFomat
//  기능   : 문자열에서 1000단위 구분자(,) 제거
// ****************************************************************************************************
function fnNumberFomat(number)
{
    return fnReplaceAll(number, ",", "");
}

function is_number(x)
{
    var reg = /^\d+$/;

    return reg.test(x);
}

// ****************************************************************************************************
//  함수명 : fnNumberFomat
//  기능   : 문자열에서 1000단위 구분자(,) 제거
// ****************************************************************************************************
function fnNumberFomatObject(obj)
{
    var inputVal = $(obj).attr("value");

    inputVal = fnReplaceAll(inputVal, ",", "");

    if (!is_number(inputVal))
    {
        $(obj).attr("value", "");
    }

    $(obj).attr("value", ($(obj).attr("value") == "" ? "0" : $(obj).attr("value")));

    return fnReplaceAll($(obj).attr("value"), ",", "");
}

// ****************************************************************************************************
//  함수명 : fnCurrencyFomat
//  기능   : 문자열에 1000단위 구분자(,)를 설정
// ****************************************************************************************************
function fnCurrencyFomat(number)
{
    if (number.toString() == "")
        return number;

    if (isNaN(number))
        return number;

    var positiveNumberPart = "";
    var lastDotIndex = number.toString().lastIndexOf(".");
    if (lastDotIndex > -1)
    {
        positiveNumberPart = number.toString().substring(0, lastDotIndex);
    }
    else
    {
        positiveNumberPart = parseInt(number, 10).toString();
    }

    var value = "";
    var temp = "";
    for (var i = 0; i < positiveNumberPart.length; i++)
    {
        temp = positiveNumberPart.length - (i + 1);
        if (i % 3 == 0 && i != 0)
            value = "," + value;

        value = positiveNumberPart.charAt(temp) + value
    }

    return value;
}

// ****************************************************************************************************
//  함수명 : fnCurrencyFomatTextbox
//  기능   : Input control에 1000단위 구분자(,)를 설정
// ****************************************************************************************************
function fnCurrencyFomatTextbox(textBox)
{
    var number = $(textBox).attr("value");
    $(textBox).attr("value", fnCurrencyFomat(number));
}

// ****************************************************************************************************
//  함수명 : fnTextBoxNumericUp
//  기능   : Input control의 값을 1 증가
// ****************************************************************************************************
function fnTextBoxNumericUp(textBoxControllId, maxValue)
{
    var isValueChanged = false;

    if (maxValue == 0)
    {
        maxValue = 9999;
    }
    var number = fnNumberFomat($("#" + textBoxControllId).attr("value"));
    if (number < 0)
    {
        number = 0;
    }
    if (parseInt(number) + 1 > maxValue)
    {
        number = maxValue;
    }
    else
    {
        number = parseInt(number) + 1;
        isValueChanged = true;
    }
    $("#" + textBoxControllId).attr("value", fnCurrencyFomat(number));

    return isValueChanged;
}

// ****************************************************************************************************
//  함수명 : fnTextBoxNumericDown
//  기능   : Input control의 값을 1 감소
// ****************************************************************************************************
function fnTextBoxNumericDown(textBoxControllId)
{
    var isValueChanged = false;

    var number = fnNumberFomat($("#" + textBoxControllId).attr("value"));
    if (number < 2)
    {
        number = 1;
    }
    else
    {
        number = parseInt(number) - 1;
        isValueChanged = true;
    }
    $("#" + textBoxControllId).attr("value", fnCurrencyFomat(number));

    return isValueChanged;
}

// ****************************************************************************************************
//  함수명 : fnInputValueCheckAscii1
//  기능   : 문자열이 허용 Ascii Code 범위 인지 확인(숫자, 영문 대소문자, [ ], [.], [,], ['], ["], [-], [/]
// ****************************************************************************************************
function fnInputValueCheckAscii1(address)
{
    for (var i = 0; i < address.length; i++)
    {
        if ((address.charAt(i) < "0" || address.charAt(i) > "9") &&
            (address.charAt(i) < "A" || address.charAt(i) > "Z") &&
            (address.charAt(i) < "a" || address.charAt(i) > "z") &&
            address.charAt(i) != " " &&
            address.charAt(i) != "." &&
            address.charAt(i) != "," &&
            address.charAt(i) != "'" &&
            address.charAt(i) != '"' &&
            address.charAt(i) != "-" &&
            address.charAt(i) != "/")
        {
            return false;
        }
    }
    return true;
}

// ****************************************************************************************************
//  함수명 : fnCalculationLeapYear
//  기능   : 2월의 말일을 계산
// ****************************************************************************************************
function fnCalculationLeapYear(year)
{
    var maxDayInMonth = 28;
    if (year % 4 == 0)
    {
        if (year % 100 == 0)
        {
            if (year % 400 == 0)
            {
                maxDayInMonth = 29;
            }
        }
        else
        {
            maxDayInMonth = 29;
        }
    }

    return maxDayInMonth;
}

// ****************************************************************************************************
//  함수명 : fnLoadChkThumb
//  기능   : Image의 Size를 특정 넓이 기준으로 재 조정
// ****************************************************************************************************
function fnLoadChkThumb(obj)
{
    var objWidth = Math.floor(obj.width);
    var objHeight = Math.floor(obj.height);
    var ratio = parseFloat(100) / parseFloat(objHeight);

    obj.height = Math.floor(parseFloat(objHeight) * parseFloat(ratio));
    obj.width = Math.floor(parseFloat(objWidth) * parseFloat(ratio));
}

// ****************************************************************************************************
//  함수명 : fnMoveFocus
//  기능   : 지정한 Control로 Focus 이동
// ****************************************************************************************************
function fnMoveFocus(currentControl, nextControlName, size)
{
    if (currentControl.value.length == size)
    {
        if (document.getElementById(nextControlName) != undefined)
        {
            document.getElementById(nextControlName).focus();
            document.getElementById(nextControlName).select();
        }
    }
}

// ****************************************************************************************************
//  함수명 : fnMoveFocusSelToText
//  기능   : 지정한 Control로 Focus 이동
// ****************************************************************************************************
function fnMoveFocusSelToText(currentControl, nextControlName)
{
    if (document.getElementById(nextControlName) != undefined)
    {
        document.getElementById(nextControlName).focus();
        document.getElementById(nextControlName).select();
    }
}

// ****************************************************************************************************
//  함수명 : fnPopupLayerShowGrdGoodsInfoCommon
//  기능   : 사은품 정보 Html 영역의 Interface를 호출
// ****************************************************************************************************
function fnPopupLayerShowGrdGoodsInfoCommon(goodsNo, eveNo, ordNo, onlineGb)
{
    fnPopupLayerShowPosition("divGrdGoodsInfo", 340, 10, event);
    $.post(
        "/Interface/GrdGoodsInfoDisplay",
        {
            "goodsNo": goodsNo,
            "eveNo": eveNo,
            "ordNo": ordNo,
            "onlineGb": onlineGb
        },
        function (data)
        {
            $("#divGrdGoodsInfoIfrm").html(data);
        }
    );
}

// ****************************************************************************************************
//  함수명 : fnShowGiftMessagePreview
//  기능   : 선물 포장 Message 보기
// ****************************************************************************************************
function fnShowGiftMessagePreview()
{
    var url = "/WebForm/OrderPayment/Popup/popup_giftMessage.aspx";
    fnWindowOpen(url, "GiftMessagePreview", 750, 485, true);
}  


// ****************************************************************************************************
//  함수명 : window resize event callback 함수
// ****************************************************************************************************
setTimeout(eval('window.onresize = function () { fnRePosYesLayer(); };'), 1000);



// wiselog clickcode : 와이즈로그에 클릭로그를 남긴다.
function setWcode(Wcode) {

    if (Wcode != null) {
        var wLogUrl = YesData.NOW_HTTP_URL() + '/wiselog/buttonclick.jsp?Wcode=' + Wcode;
       
       try{ 
           n_click_logging(wLogUrl);
           clickstream.setClickstreamLog(Wcode);
       }
       catch(e){}
    }
}

// wiselog clickcode : 와이즈로그에 클릭로그를 남긴다.
function setBBcode(code) {

    if (code != null) {
        var wLogUrl = YesData.NOW_HTTP_URL() + '/wiselog/buttonclick.jsp?BBcode=' + code;

        try {
            n_click_logging(wLogUrl);
            clickstream.setClickstreamLog(code);
        }
        catch (e) { }
    }
}

// wiselog clickcode 후 페이지 이동
function setWcodeNRedirection(url, Wcode) {
    setWcode(Wcode);

    document.location.href = url;  
}

// wiselog clickcode : 와이즈로그에 클릭로그를 남긴다.
function setPcode(Pcode) {

    if (Pcode != null) {
        var pLogUrl = YesData.NOW_HTTP_URL() + '/wiselog/buttonclick.jsp?Pcode=' + Pcode;

        try {
            n_click_logging(pLogUrl);
            clickstream.setClickstreamLog(Pcode);
        }
        catch (e) { }
    }
}

// wiselog clickcode : 와이즈로그에 클릭로그를 남긴다.
function setHcode(Hcode) {

    if (Hcode != null) {
        var hLogUrl = YesData.NOW_HTTP_URL() + '/wiselog/buttonclick.jsp?Hcode=' + Hcode;

        try {
            n_click_logging(hLogUrl);
            clickstream.setClickstreamLog(Hcode);
        }
        catch (e) { }
    }
}

// wiselog clickcode : 와이즈로그에 클릭로그를 남긴다.
function setNcode(Ncode) {

    if (Ncode != null) {
        var nLogUrl = YesData.NOW_HTTP_URL() + '/wiselog/buttonclick.jsp?Ncode=' + Ncode;

        try {
            n_click_logging(nLogUrl);
            clickstream.setClickstreamLog(Ncode);
        }
        catch (e) { }
    }
}

// wiselog clickcode : 와이즈로그에 클릭로그를 남긴다.
function setOcode(Ocode) {

    if (Ocode != null) {
        var wLogUrl = YesData.NOW_HTTP_URL() + '/wiselog/buttonclick.jsp?Ocode=' + Ocode;

        try {
            n_click_logging(wLogUrl);
            clickstream.setClickstreamLog(Ocode);
        }
        catch (e) { }
    }
}

// wiselog clickcode : 와이즈로그에 클릭로그를 남긴다.
function SetCdCode(Ocode) {

    if (Ocode != null) {
        var wLogUrl = YesData.NOW_HTTP_URL() + '/wiselog/buttonclick.jsp?CdCode=' + Ocode;

        try {
            n_click_logging(wLogUrl);
            clickstream.setClickstreamLog(Ocode);
        }
        catch (e) { }
    }
}

function loginPage() {
    var url = document.location.href;

    var urls = url.split('?');
    var page = urls[0];
    var params = urls.length > 1 ? urls[1] : '';

    var urlU = new URLUtil();

    var loginUrl = "/Templates/FTLogin.aspx?ReturnURL=" + urlU.getURL();
    var returnParams = urlU.getQueryString();

    if (returnParams != '') loginUrl += "&ReturnParams=" + returnParams.replace(/&/g, "`");

    document.location = loginUrl;
}